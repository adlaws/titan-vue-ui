@import '~vuetify/src/styles/styles.sass';

@import './utilities/_all.scss';

@import './fonts.scss';
@import './layout.scss';
// @import './buttons.scss';
// @import './forms.scss';

html {
    height: 100%;
    width: 100%;
    margin: 0;
    padding: 0;
    user-select: none;
    // NOTE: The `!important` is required on the `overflow` rule to hide the vertical scrollbar
    //       when using the Vuetify UI framework due to its CSS reset rules:
    //       Ref: The scrollbar is showing even though my content is not overflowing vertically:
    //            https://vuetifyjs.com/en/getting-started/frequently-asked-questions/#questions
    overflow: hidden !important;
    background-color: $transparent-black;
}

body {
    height: 100%;
    width: 100%;
    margin: 0;
    padding: 0;
    font-family: Verdana, Geneva, "Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif;
    -webkit-font-smoothing: antialiased;
    // -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: grayscale;
    user-select: none;
}

// Vuetify overrides ------------------------------------------------------------------------------
#app
{
    // NOTE: The `background-color` is required on otherwise we cover up Titan with white (which
    //       we can't see through) when using the Vuetify UI framework
    background-color: $transparent-black !important;
}
.v-application
{
    // NOTE: Override the standard Vuetify font with Verdana, at least until the Chromium font
    //       anti-aliasing (or lack thereof for fonts) issue is resolved
    font-family: Verdana, Geneva, "Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif !important;
}

// make <v-select> components appended to the outside of a <v-input> components line up correctly
.v-input__append-outer
{
    margin-top: 0px !important;
    margin-bottom: 0px !important;
    .v-select
    {
        margin: 0px;
        padding: 0px;
    }
}

// The following is to provide styling to make <v-tabs> more compact in their presentation than
// the Vuetify default. Simply add a 'compact' class to a <v-tabs> component to apply the visual
// style.
.v-application--is-ltr
{
    .v-tabs
    {
        &.compact
        {
            :not(.v-tabs--vertical)
            {
                .v-tabs-bar
                {
                    height: 32px;
                }
                .v-tab
                {
                    padding: 0 8px;
                }
                &.v-tabs--align-with-title>.v-tabs-bar:not(.v-tabs-bar--show-arrows):not(.v-slide-group--is-overflowing)>.v-slide-group__wrapper>.v-tabs-bar__content>.v-tab:first-child,
                &.v-tabs--align-with-title>.v-tabs-bar:not(.v-tabs-bar--show-arrows):not(.v-slide-group--is-overflowing)>.v-slide-group__wrapper>.v-tabs-bar__content>.v-tabs-slider-wrapper+.v-tab
                {
                    margin-left: 12px !important; // 42px in Vuetify - overly large
                }
            }
        }
    }
}

.v-input
{
    &.input-align-right
    {
        input
        {
            text-align:right;
        }
    }
}
// The following is to provide styling to make forms and form fields more compact in their
// presentation than the Vuetify default. Simply add a 'compact' class to a <v-form> component
// to apply the visual style.
$scale-factor: 0.75;
$scale-pct: percentage($scale-factor);
.v-form.compact
{
    .row
    {
        margin: 0px !important;
        padding: 1px 0 !important;
    }
    .col
    {
        margin: 0px !important;
        padding: 0 2px !important;
    }

    .v-label
    {
        margin: 0 4px 0 0 !important;
        font-size: 0.75rem !important;
    }

    input
    {
        padding: 0px !important;
        max-height: 32px * $scale-factor !important;
    }

    .v-input
    {
        margin: 0px !important;
        padding: 0px !important;
        .v-input__slot
        {
            margin-bottom: 1px !important;
            font-size: 0.75rem !important;

            .v-label:not(.v-label--active)
            {
                top: 0.1rem !important;
            }
        }

        .v-input__prepend-inner, .v-input__append-inner
        {
            margin: 0px;
            .v-input__icon
            {
                height: auto;
            }
            .v-icon
            {
                margin-top: 4px;
                font-size: 0.75rem !important;
            }
        }

        .v-input__prepend-outer, .v-input__append-outer
        {
            margin:0px;
            .v-icon
            {
                margin-top: 0.25rem;
                font-size: 0.75rem !important;
            }
            .v-select
            {
                padding-left: 0.2em !important;
            }
        }
    }

    .v-select
    {
        .v-icon
        {
            font-size: 1.5em !important;
        }

        .v-select__slot
        {
            label
            {
                &.v-label:not(.v-label--active)
                {
                    top: 1.3rem !important;
                }
                &.v-label--active
                {
                    margin-top: 0.95rem !important;
                }
            }

            .v-input__append-inner
            {
                margin: 0px !important;
                padding: 0px !important;
            }

            .v-select__selections
            {
                font-size: 100% !important;
                .v-select__selection
                {
                    margin: 0px !important;
                    padding: 0px !important;
                }
            }

            .v-menu__content
            {
                font-size: 0.5rem;
            }
        }

        &.v-select--is-multi
        {
            .v-input__append-inner
            {
                margin-top: 1rem !important;
            }

            .v-select__selections
            {
                .v-chip
                {
                    &.v-size--small
                    {
                        top: 0.4rem;
                    }
                }
            }
        }
    }

    .v-slider--horizontal
    {
        min-height: 32px * $scale-factor !important;
    }

    .v-messages, .v-messages__message
    {
        min-height: auto !important;
        font-size: 75% !important;
    }
}

.v-data-table.compact
{
    .v-icon
    {
        font-size: 1.5em;
    }
    >.v-data-table__wrapper>table{
        >tbody>tr>td,
        >tbody>tr>th,
        >tfoot>tr>td,
        >tfoot>tr>th,
        >thead>tr>td,
        >thead>tr>th
        {
            padding: 0 0.5rem;
            height: 1.5rem;
        }
    }
    >.v-data-footer>.v-data-footer__select .v-select {
        margin: 0.25rem 0 0.25rem 0.75rem;
    }
}

.container.compact
{
    padding:4px;
}

// ------------------------------------------------------------------------------------------------
.ellipsis-overflow
{
    overflow: hidden;
    white-space:nowrap;
    text-overflow: ellipsis;
}
td.ellipsis-overflow
{
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    max-width: 8rem;
}

.inherit-color
{
    color: inherit !important;
}

.maxw-99
{
    max-width:99%;
}

.clickable
{
    cursor: pointer;
    &:disabled
    {
        cursor: not-allowed;
    }
}

pre, code, .monospace
{
    font-family: "RobotoMono", Consolas, "Courier New", Courier, monospace;
}

// transitions ------------------------------------------------------------------------------------
// Ref: https://vuejs.org/v2/guide/transitions.html#Transitioning-Single-Elements-Components
// Fast fade in/out - context menus etc
// <transition name="fade" mode="out-in"> ... </transition>
.fade-enter-active, .fade-leave-active{ @include transition($transition-duration-fast, [opacity]); }
.fade-enter, .fade-leave-to{opacity: 0;}

// Slower fade in/out - splash screens, modals, logins etc
// <transition name="fade-slow" mode="out-in"> ... </transition>
.fade-slow-enter-active, .fade-slow-leave-active{ @include transition($transition-duration-slow, [opacity]); }
.fade-slow-enter, .fade-slow-leave-to{opacity: 0;}

// animations -------------------------------------------------------------------------------------
@keyframes shake-error {
    0%, 100% {transform: translateX(0);}
    33.333%, 66.666% {transform: translateX(-0.375rem);}
    16.666%, 50%, 83.333% {transform: translateX(0.375rem);}
}
.shake-error {
    animation-duration: 0.5s;
    animation-fill-mode: forwards;
    animation-timing-function: ease-in-out;
    animation-name: shake-error;
}

@keyframes fast-spin {
    0% {transform: scale(1); opacity: 1;}
    50% {transform: scale(1.05); opacity: 0.25;}
    100% {transform: scale(1); opacity: 1;}
}
.fast-spin {
    animation-duration: 0.2s;
    animation-fill-mode: forwards;
    animation-timing-function: ease-out;
    animation-name: fast-spin;
}

// desktop component styles -----------------------------------------------------------------------
// CSS variables - accessible in JavaScript viaâ€¦
//     getComputedStyle(document.documentElement).getPropertyValue('--my-variable-name');
:root {
    --my-variable-name: #999999;
}

// if we are not in Outerra, make the background something other
// than white so we can see elements that are rendered in white
// to contrast with the rendered environment in Outerra
// https://www.colorzilla.com/gradient-editor/
.faux-outerra-background
{
    background: linear-gradient(to bottom, #7ccaf9 0%,#79bdf2 10%,#71aae2 25%,#74aee8 37%,#77b3ef 48%,#559646 52%,#7ea06b 83%,#a8987e 100%);
    .night
    {
        background:  linear-gradient(to bottom, #4c4c4c 0%,#595959 10%,#666666 25%,#474747 37%,#2c2c2c 48%,#000000 52%,#111111 60%,#2b2b2b 76%,#1c1c1c 91%,#131313 100%);
    }
}

@each $name, $color in $colors {
    .#{$name} {
        background-color: $color;
        color: findContrastColor($menu-bg-inactive, $white, $black);
    }
}

.cse-overlay-text
{
    color: #FFF;
    text-shadow: 0 0 2px black, 0 0 4px black;
}

.cse-splash
{
    display: flex;
    justify-content:center;
    align-items: center;

    overflow: hidden;
    position:absolute;

    top:37.5%;
    left:37.5%;
    width:25vw;
    height:25vh;
    min-width:450px;
    min-height:250px;

    background-color: rgba($menu-bg-inactive,0.9);
    backdrop-filter: $glass-blur;
    color: $menu-fg-inactive;

    @include box-shadow($drop-shadow-large, $menu-bg-inactive, 1.0);
    border-radius: 4px;
}

.cse-desktop
{
    overflow: hidden;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: $transparent-black;
}

.cse-desktop--task-bar
{
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100vw;
    height: 64px;

    background-color: rgba($menu-bg-inactive,0.9);
    backdrop-filter: $glass-blur;
    color: $menu-fg-inactive;
    @include box-shadow($drop-shadow-large);

    z-index: 1024;
    user-select: none;

    display: flex;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-items: center;

    .spacer
    {
        flex-grow: 1;
    }

    .start
    {
        margin-left: 24px;

        .start-cse-button
        {
            display: flex;
            flex-wrap: nowrap;
            justify-content: flex-start;
            align-items: center;
            &:hover
            {
                cursor: pointer;
                color: $menu-fg-hover;
                text-shadow:0 0 10px rgba(255,255,255,0.25);
            }
        }

        .menu
        {
            background-color: rgba($menu-bg-inactive,0.9);

            z-index: 1025;

            position: absolute;
            bottom: 64px;
            left: 0px;

            padding: 0;
            margin: 0;

            @include box-shadow($drop-shadow-large);

            ul
            {
                margin: 0;
                padding :0;
                list-style: none;
                li
                {
                    cursor: pointer;

                    display: flex;
                    flex-wrap: nowrap;
                    justify-content: flex-start;
                    align-items: center;

                    margin: 0px;
                    padding: 6px 24px;

                    @include transition($transition-duration-fast, (background-color));

                    &:hover
                    {
                        color: $menu-fg-hover;
                        background-color: rgba($menu-bg-hover,0.9);
                    }
                }
            }
        }
    }
}

.cse-desktop--taskbar-window-tile
{
    width: 48px;
    height: 48px;
    font-size:40px;
    line-height:40px;

    margin: 0;
    padding: 0;

    display: flex;
    flex-wrap: nowrap;
    justify-content: center;
    align-items: center;

    color:#999;
    background-color: $bg-dark;
    border-radius:4px;
    margin-right:8px;

    cursor: pointer;

    @include transition($transition-duration-fast, (box-shadow, color, background-color));

    &:hover
    {
        color: $menu-fg-hover;
        background-color: $menu-bg-hover;
        @include box-shadow($drop-shadow-large);
    }
    &.active
    {
        color: $menu-fg-active;
        background-color: $menu-bg-active;
        &:hover
        {
            color: $menu-fg-active-hover;
            background-color: $menu-bg-active-hover;
        }
    }
}

.cse-desktop--window
{
    position: absolute;

    padding: 0;
    margin: 0;
    border: none;

    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-content: stretch;

    @include transition($transition-duration-medium, (box-shadow, color, background-color));

    background-color: $transparent-black;
    border-radius: 0px;
    @include box-shadow($drop-shadow-medium);

    &.active
    {
        @include box-shadow($drop-shadow-large);
        // box-shadow: 0 0 4px #FFFFFF, 0 0 10px black;
    }

    &.fullscreen
    {
        border-radius: 0;
        box-shadow: none;
    }

    .content
    {
        overflow: hidden;
    }
}

.cse-desktop--window-title-bar
{
    margin: 0;
    padding: 0;

    display: flex;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-items: center;

    @include transition($transition-duration-medium, (box-shadow, color, opacity, background-color));

    cursor: move;
    &.maximized, &.nodrag
    {
        cursor: default;
    }
    user-select: none;
    width: 100%;
    min-height: 32px;
    height: 32px;
    max-height: 32px;

    background-color: $menu-bg-inactive;
    color: $menu-fg-inactive;

    .title-icon
    {
        width: 24px;
        height: 24px;
        font-size: 24px;
        line-height: 24px;
        margin: 2px;
        opacity: 0.5;
    }

    .title-text
    {
        margin: 0 2px;
        flex-grow: 1;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        opacity: 0.5;
    }

    .control-btn
    {
        cursor: pointer;
        opacity: 0.5;
    }

    &.active
    {
        background-color: $menu-bg-active;
        color: $menu-fg-active;
        .title-icon, .title-text, .control-btn
        {
            opacity: 1.0;
        }
    }
}

.cse-desktop--window-content
{
    flex-grow: 1;
    overflow: scroll;

    padding: 4px;
    margin: 0px;
    margin-top: 0;

    @include transition($transition-duration-fast, (box-shadow, color, background-color));

    background-color: $window-bg-active;
    color: $window-fg-active;
    &.dark
    {
        color: $window-bg-active;
        background-color: $window-fg-active;
    }
}

.cse-desktop--window-status-bar
{
    flex-grow: 0;
    overflow: hidden;

    min-height: 24px;
    height: 24px;
    max-height: 24px;
    font-size: 0.75rem;

    padding: 4px;
    margin: 0px;
    margin-top: 0;

    color: $menu-fg-active;
    background-color: $menu-bg-active;
    &.dark
    {
        color: $menu-bg-active;
        background-color: $menu-fg-active;
    }
}

.cse-desktop--dropdown-toolbar
{
    position:absolute;

    display: flex;
    flex-direction: column;
    align-items: center;

    .trigger
    {
        cursor: pointer;
    }

    ul
    {
        display: flex;
        flex-wrap: nowrap;
        justify-content: flex-start;
        align-items: center;

        margin:0;
        padding:0;

        list-style: none;
        li
        {
            backdrop-filter: $glass-blur;

            width: 52px;
            height: 52px;
            font-size:40px;
            line-height:40px;

            margin: 0 4px;
            padding: 0;

            display: flex;
            flex-direction: column;
            flex-wrap: nowrap;
            justify-content: flex-start;
            align-items: center;

            color: $menu-fg-inactive;
            background-color: $menu-bg-inactive;
            border-radius:4px;

            @include transition($transition-duration-medium, (box-shadow));

            cursor: pointer;
            &:hover
            {
                color: $menu-bg-hover;
                background-color: $menu-fg-hover;
                @include box-shadow($drop-shadow-medium, $menu-bg-inactive, 0.4);
            }
            &.active
            {
                color: $menu-bg-active;
                background-color: $menu-fg-active;
                box-shadow: none;
                &:hover
                {
                    color: $menu-bg-active-hover;
                    background-color: $menu-fg-active-hover;
                    @include box-shadow($drop-shadow-medium, $menu-bg-inactive, 0.4);
                }
            }

            .label
            {
                font-size:25%;
                line-height:25%;
                margin-top:2px;
            }
        }
    }
}

.cse--context-menu
{
    z-index: 1024;

    border-radius: 2px;

    position: absolute;
    top:0;
    left:0;
    min-width: 10em;

    padding: 0;
    margin: 0;

    color: $menu-fg-inactive;
    background-color: $menu-bg-inactive;
    @include box-shadow($drop-shadow-medium);

    ul
    {
        margin:0 !important;
        padding:0 !important;
        list-style: none;
        li
        {
            @include transition($transition-duration-medium, (color, background-color));

            .spacer { flex-grow: 1; }
            hr { width: 100%; }

            margin:0px;
            padding: 4px 8px;

            display: flex;
            flex-wrap: nowrap;
            justify-content: flex-start;
            align-items: center;

            &.disabled
            {
                color: rgba($menu-fg-inactive, 0.25);
            }
            &.separator
            {
                padding: 0px 4px;
            }
            &:not(.separator):not(.disabled)
            {
                &:hover
                {
                    cursor: pointer;
                    color: $menu-fg-hover;
                    background-color: $menu-bg-hover;
                }
            }
            &.disabled
            {
                &:hover
                {
                    cursor: not-allowed;
                }
            }
        }
    }
}

.cse--radial-menu
{
    z-index: 1024;

    position: absolute;
    top:0;
    left:0;

    padding: 0;
    margin: 0;

    .wedge
    {
        transition: all $transition-duration-fast;
        &:hover
        {
            &:not(.disabled)
            {
                cursor: pointer;
                opacity: 1;
            }
            &.disabled
            {
                cursor: not-allowed;
            }
        }
    }
}

.cse-desktop--dockable
{
    $handle-size: 32px;

    z-index: 1024;

    margin: 0;
    padding: 0;

    min-width: $handle-size;

    @include box-shadow($drop-shadow-medium);

    position: absolute;

    display: flex;
    &.dock-w {
        flex-direction: row;
        .dockable-content { box-shadow: inset -8px 0 8px -8px rgba(0,0,0,0.8); }
    }
    &.dock-e {
        flex-direction: row-reverse;
        .dockable-content { box-shadow: inset 8px 0 8px -8px rgba(0,0,0,0.8); }
    }
    &.dock-n {
        flex-direction: column;
        .dockable-content { box-shadow: inset 0 -8px 8px -8px rgba(0,0,0,0.8); }
    }
    &.dock-s {
        .dockable-content { box-shadow: inset 0 8px 8px -8px rgba(0,0,0,0.8); }
        flex-direction: column-reverse;
    }

    .dockable-content
    {
        flex-grow: 1;
        overflow-y: auto;

        color: $window-bg-active;
        background-color: $window-fg-active;
    }

    .dockable-handle
    {
        background-color: $menu-bg-active;
        color: $menu-fg-active;

        display: flex;
        align-content: flex-start;
        align-items: center;

        .dockable-trigger
        {
            align-items: flex-start;
            margin: 4px;
        }
        .title-text
        {
            padding: 8px;
        }
    }

    &.dock-e, &.dock-w
    {
        .dockable-handle
        {
            flex-direction: column;

            padding-bottom: 4px;

            min-width: $handle-size;
            max-width: $handle-size;
            width: $handle-size;
            height: 100%;

            .title-text
            {
                padding-top: 4px;
                text-align: center;
                line-height: 100%;

                // make the text vertical
                writing-mode: vertical-lr;
                text-orientation: upright;
                letter-spacing: -0.15em; // decrease(vertical) spacing between letters
            }

            .drag-handle
            {
                margin-top: 8px;
                cursor: ns-resize;
            }
        }
    }

    &.dock-n, &.dock-s
    {
        .dockable-handle
        {
            flex-direction: row;

            padding-right: 4px;

            min-height: $handle-size;
            max-height: $handle-size;
            height: $handle-size;
            width: 100%;

            .title-text
            {
                padding-left: 4px;
                text-align: left;
            }

            .drag-handle
            {
                margin-left: 8px;
                cursor: ew-resize;
            }
        }
    }
}

.cse-desktop--notifications-area
{
    z-index: 1024;

    margin: 0;
    padding: 0;

    position: absolute;

    .notification-items
    {
        padding: 0 !important;

        display:flex;
        flex-direction: column;

        .cse-desktop--notification
        {
            @include box-shadow($drop-shadow-large, $menu-bg-inactive, 1.0);

            display:flex;
            flex-direction: column;

            &:not(:last-child)
            {
                margin-bottom: 4px;
            }

            background-color: $menu-bg-inactive;
            color: $menu-fg-inactive;

            // use CSS variables provided by Vuetify framework to get colors
            // Ref: https://vuetifyjs.com/en/features/theme/#custom-properties
            @each $name in (primary, secondary, accent, info, error, success, warning) {
                $varNameBase: --v-#{unquote($name)}-base;
                &.#{$name}, &.#{$name} .v-icon {
                    background-color: $menu-bg-inactive !important;
                    border-color: var($varNameBase);
                    color: var($varNameBase);
                }
                &.#{$name} .lifetime-bar
                {
                    background-color: var($varNameBase);
                }
                &.#{$name} .icon-spacer
                {
                    border-left: 1em solid var($varNameBase);
                }
            }

            font-size: 80%;
            height:3.2em; // 2 lines tall - see -webkit-line-clamp below

            .notification-content
            {
                display:flex;
                align-items: center;
                flex-grow: 1;

                .icon-spacer
                {
                    width: 2em;
                    height: 100%;
                    opacity: 50%;
                }

                .notification-text
                {
                    flex-grow: 1;
                    margin:0 0.25em;

                    display: -webkit-box;
                    -webkit-line-clamp: 2; // clamp after 2 lines - see height declaration above
                    -webkit-box-orient: vertical;
                    overflow: hidden;
                }
            }

            .lifetime-bar
            {
                width: 100%;
                height: 2px;
                min-height: 2px;

                transition-property: width;
                transition-timing-function: linear;
                transition-duration: 5s;
            }
        }
    }

    // reversal of icon/text positioning when docked to the right hand
    // side of the desktop
    &.dock-e
    {
        .notification-items
        {
            .cse-desktop--notification
            {
                .notification-content
                {
                    flex-direction: row-reverse;
                }
            }
        }
    }
}

.cse-desktop--entity-spotlight
{
    z-index: 1024;

    position:absolute;

    top:25vh;
    left:20vw;
    width:60vw;

    .search-box
    {
        height:4.5rem;
        padding: 0 1rem;

        color: $menu-fg-active;
        background-color: $menu-bg-active;
        backdrop-filter: $glass-blur;

        @include box-shadow($drop-shadow-large, $menu-bg-inactive, 1.0);
        border-radius: 2px;

        input
        {
            width:100%;

            margin:0;
            padding:0;

            border-width:0;
            border: none;

            color: inherit;
            font-size:3rem;
            &:focus
            {
                outline: none;
            }
        }
    }

    .results-box
    {
        @include box-shadow($drop-shadow-large, $menu-bg-inactive, 1.0);

        color: $menu-fg-inactive;
        background-color: $menu-bg-inactive;

        max-height:12rem;
        overflow: auto;
        padding: 0;
        margin: 0 1rem;

        ul
        {
            margin:0 !important;
            padding:0 !important;
            list-style: none;
            li
            {
                @include transition($transition-duration-medium, (color, background-color));

                margin:0px;
                padding: 4px 1rem;

                display: flex;
                flex-wrap: nowrap;
                justify-content: flex-start;
                align-items: center;

                user-select: none;
                cursor: pointer;

                &.active
                {
                    color: $menu-fg-hover;
                    background-color: $menu-bg-hover;
                }
                &:focus
                {
                    outline: none;
                    user-select: none;
                }
            }
        }
    }
}
